---
namespace: directus

database:
  defines: runnable
  metadata:
    private: true
    name: PostgreSQL
    description: PostgreSQL is a powerful, open source object-relational database system with over 30 years of active development that has earned it a strong reputation for reliability, feature robustness, and performance.
    tags: dataops,database
    website: https://www.postgresql.org/
    source: https://github.com/postgres/postgres
    publisher: monk.io
    icon: https://assets.monk.io/icons/postgresql_logo.png
  containers:
    postgres:
      image: postgres:12
      environment:
        - <- `POSTGRES_USER=${postgres-user}`
        - <- `POSTGRES_PASSWORD=${postgres-password}`
        - <- `POSTGRES_DB=${postgres-db}`
      paths:
        - <- `${db-path}:/var/lib/postgresql/data`
  variables:
    db-path:
      type: string
      value: <- `${monk-volume-path}/directus-database`
    postgres-user:
      type: string
      value: directus
    postgres-password:
      type: string
      value: directus
    postgres-db:
      type: string
      value: directus
  services:
    postgres:
      container: postgres
      port: 5432
      protocol: tcp

cache:
  defines: runnable

  metadata:
    private: true
    name: Redis
    description: Redis is an in-memory database that persists on disk.
    website: https://redis.io
    source: https://github.com/redis/redis
    publisher: monk.io
    icon: https://assets.monk.io/icons/png-transparent-redis-in-memory-database-key-value-database-cache-speech-miscellaneous-logo-data.png
    email: maciej@monk.io
  containers:
    redis:
      image: docker.io/redis:alpine
      paths:
        - <- `${monk-volume-path}/redis:/data`
  services:
    redis:
      container: redis
      port: 6379
      protocol: tcp

server:
  defines: runnable

  metadata:
    name: Directus
    icon: https://pbs.twimg.com/profile_images/1495544699410653190/Vb675Xa3_400x400.jpg
    description: Directus is the world's first Open Data Platform for instantly turning any SQL database into an API and beautiful no-code app.
    website: https://directus.io/
    github: https://github.com/directus/directus

  depends:
    wait-for:
      runnables:
        - directus/database
        - directus/cache
      timeout: 30

  connections:
    database:
      runnable: directus/database
      service: postgres
    cache:
      runnable: directus/cache
      service: redis

  containers:
    directus:
      image: directus/directus:9
      environment:
        - <- `KEY=${key}`
        - <- `SECRET=${secret}`
        - <- `DB_CLIENT=pg`
        - <- "DB_HOST=" connection-hostname("database") concat-all
        - <- "DB_PORT=" connection-port("database") concat-all
        - <- `DB_DATABASE=${postgres-db}`
        - <- `DB_USER=${postgres-user}`
        - <- `DB_PASSWORD=${postgres-password}`
        - CACHE_ENABLED=true
        - CACHE_STORE=redis
        - <- "CACHE_REDIS=redis://" connection-hostname("cache") ":" connection-port("cache") concat-all
        - <- `ADMIN_EMAIL=${admin-email}`
        - <- `ADMIN_PASSWORD=${admin-password}`
        - CONFIG_PATH=/directus/monk-config.json
      paths:
        - <- `${uploads-path}:/directus/uploads`
      ports:
        - 8055:8055
  files:
    config:
      container: directus
      path: /directus/monk-config.json
      raw: true
      mode: 0666
      contents: <- $config
  variables:
    uploads-path:
      type: string
      value: <- `${monk-volume-path}/directus-uploads`
    postgres-user:
      type: string
      value: directus
    postgres-password:
      type: string
      value: directus
    postgres-db:
      type: string
      value: directus
    admin-email:
      type: string
      value: admin@directus.io
    admin-password:
      type: string
      value: directus
    key:
      type: string
      value: <- random-uuid
    secret:
      type: string
      value: <- random-uuid
    config:
      type: string
      value: '{}'
